/**
 * WebSocketÂÆûÊó∂ÈÄöÁü•Hook
 * Êó†ÈúÄËΩÆËØ¢ÔºåÊúçÂä°Âô®‰∏ªÂä®Êé®ÈÄÅ
 */

import { useEffect, useState } from 'react';
import io from 'socket.io-client';

export function useRealtimeNotifications(userInfo) {
  const [socket, setSocket] = useState(null);
  const [notificationCount, setNotificationCount] = useState(0);

  useEffect(() => {
    if (!userInfo || !userInfo.name) {
      return;
    }

    // ËøûÊé•WebSocketÊúçÂä°Âô®
    const baseUrl = process.env.REACT_APP_API_URL || 
      (process.env.NODE_ENV === 'production' 
        ? 'https://platform-program.onrender.com' 
        : 'http://localhost:5000');

    const newSocket = io(baseUrl, {
      transports: ['websocket', 'polling'],
      reconnection: true,
      reconnectionDelay: 1000,
      reconnectionAttempts: 5
    });

    console.log('üîå ËøûÊé•WebSocketÊúçÂä°Âô®...', baseUrl);

    // ËøûÊé•ÊàêÂäü
    newSocket.on('connect', () => {
      console.log(' WebSocketËøûÊé•ÊàêÂäü');
      // Ê≥®ÂÜåÁî®Êà∑
      newSocket.emit('register', userInfo.name);
    });

    // Êé•Êî∂ÂÆûÊó∂ÈÄöÁü•
    newSocket.on('new-notification', (notification) => {
      console.log(' Êî∂Âà∞ÂÆûÊó∂ÈÄöÁü•:', notification);
      
      // Êõ¥Êñ∞ÈÄöÁü•Êï∞Èáè
      setNotificationCount(prev => prev + 1);
      
      // ÊòæÁ§∫ÂºπÁ™óÊèêÈÜí
      showNotificationToast(notification);
      
      // Â¶ÇÊûúÊµèËßàÂô®ÊîØÊåÅÔºåÂèëÈÄÅÁ≥ªÁªüÈÄöÁü•
      if (Notification.permission === 'granted') {
        new Notification('Êñ∞ÈÄöÁü•', {
          body: notification.message || notification.content,
          icon: '/favicon.ico',
          tag: 'notification-' + notification._id
        });
      }
    });

    // ËøûÊé•ÈîôËØØÔºàÈùôÈªòÂ§ÑÁêÜÔºå‰∏çÂΩ±ÂìçÈ°µÈù¢Ôºâ
    newSocket.on('connect_error', (error) => {
      console.log('WebSocketËøûÊé•Â§±Ë¥•Ôºà‰∏çÂΩ±Âìç‰ΩøÁî®Ôºâ:', error.message);
    });

    // Êñ≠ÂºÄËøûÊé•
    newSocket.on('disconnect', () => {
      console.log('üîå WebSocketÊñ≠ÂºÄËøûÊé•');
    });

    setSocket(newSocket);

    // Ê∏ÖÁêÜ
    return () => {
      if (newSocket) {
        newSocket.disconnect();
      }
    };
  }, [userInfo?.name]);

  return { socket, notificationCount, setNotificationCount };
}

// ÊòæÁ§∫ÈÄöÁü•ÂºπÁ™ó
function showNotificationToast(notification) {
  const toast = document.createElement('div');
  toast.style.cssText = `
    position: fixed;
    top: 80px;
    right: 20px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 16px 20px;
    border-radius: 12px;
    box-shadow: 0 8px 24px rgba(102, 126, 234, 0.4);
    z-index: 10000;
    font-size: 14px;
    max-width: 320px;
    animation: slideInRight 0.4s ease-out;
    cursor: pointer;
  `;

  toast.innerHTML = `
    <div style="display: flex; align-items: center; gap: 12px;">
      <div style="font-size: 24px;"></div>
      <div style="flex: 1;">
        <div style="font-weight: bold; margin-bottom: 4px;">Êñ∞ÈÄöÁü•</div>
        <div style="font-size: 13px; opacity: 0.95;">
          ${notification.message || notification.content}
        </div>
      </div>
    </div>
  `;

  // ÁÇπÂáªË∑≥ËΩ¨Âà∞ÈÄöÁü•È°µÈù¢
  toast.onclick = () => {
    if (window.setSection) {
      window.setSection('notifications');
    }
    if (toast.parentNode) {
      toast.parentNode.removeChild(toast);
    }
  };

  document.body.appendChild(toast);

  // 5ÁßíÂêéËá™Âä®Ê∂àÂ§±
  setTimeout(() => {
    if (toast.parentNode) {
      toast.style.animation = 'slideOutRight 0.4s ease-in';
      setTimeout(() => {
        if (toast.parentNode) {
          toast.parentNode.removeChild(toast);
        }
      }, 400);
    }
  }, 5000);
}

// Ê∑ªÂä†Âä®ÁîªÊ†∑Âºè
if (typeof document !== 'undefined') {
  const style = document.createElement('style');
  style.textContent = `
    @keyframes slideInRight {
      from {
        transform: translateX(400px);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }
    
    @keyframes slideOutRight {
      from {
        transform: translateX(0);
        opacity: 1;
      }
      to {
        transform: translateX(400px);
        opacity: 0;
      }
    }
  `;
  document.head.appendChild(style);
}

